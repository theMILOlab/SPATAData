% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addSampleMetaData.R
\name{getSampleMetaData}
\alias{getSampleMetaData}
\title{Get sample meta data}
\usage{
getSampleMetaData(
  object,
  as_list = TRUE,
  source_only = FALSE,
  na_rm = TRUE,
  warn = TRUE
)
}
\arguments{
\item{object}{An object of class \code{SPATA2}.}

\item{as_list}{Logical, if TRUE, the output will be a list. Default is TRUE.}

\item{source_only}{Logical, if TRUE, only meta slots that fit to a column
of the \link[=source_df]{source data.frame} will be included.}

\item{na_rm}{Logical, if TRUE, removes columns with NA values - missing values. Default is TRUE.}

\item{warn}{Logical, if TRUE, warnings will be issued for class mismatches
between the expected class as defined in the  \link[=source_df]{source data.frame}
and the object's metadata. Default is TRUE.}
}
\value{
A data frame or list containing the sample metadata.

\dontrun{
  # Assuming 'sample_object' is your SPATA2 object 
  metadata <- getSampleMetaData(sample_object)
  metadata_list <- getSampleMetaData(sample_object, as_list = TRUE)
  metadata_df <- getSampleMetaData(sample_object, as_list = FALSE)
  metadata_source_only <- getSampleMetaData(sample_object, source_only = TRUE)
  metadata_no_na <- getSampleMetaData(sample_object, na_rm = TRUE)
}
}
\description{
This function retrieves the metadata for samples in an object.
It allows for various options to format the output, remove missing values,
and provide warnings for class mismatches.
}
\note{
Only meta slots of one dimension (vectors) are returned. If your \code{SPATA2}
object contains meta data that has multiple dimensions (e.g. data.frames, matrices)
extract via \code{object@meta_sample}.
}
\examples{
# example code

library(SPATA2)
data("example_data")

object <- example_data$object_UKF275T_diet

meta_list <- list(donor_id = "UKF275", organ = "Cerebrum", hist_class = "Glioblastoma")

# prior
getSampleMetaData(object)

# add meta data
object <- addSampleMetaData(object, meta_data = meta_list)

# afterwards
getSampleMetaData(object)

getSampleMetaData(object, as_list = FALSE) # return as data.frame

getSampleMetaData(object, na_rm = FALSE) # return all source_df slots

}
